# -*- coding: utf-8 -*-
"""save.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1nXOHNU208ebrbo3JDPlG3sATMAzl6U_O
"""

!pip install beautifulsoup4 requests pandas

import requests
from bs4 import BeautifulSoup
from datetime import datetime
import psycopg2

# ✅ 1. Cấu hình kết nối PostgreSQL (bạn cần sửa lại đúng thông tin)
DB_NAME = "gold_data"
USER = "postgres"
PASSWORD = "password"
HOST = "141.193.213.10"  # <-- Địa chỉ IP Public hoặc tên miền PostgreSQL server của bạn
PORT = "5432"

# ✅ 2. Crawl dữ liệu từ SJC
def crawl_sjc():
    url = "https://sjc.com.vn/giavang/textContent.php"
    headers = {"User-Agent": "Mozilla/5.0"}
    response = requests.get(url, headers=headers)
    return response.text, datetime.now().isoformat()

# ✅ 3. Làm sạch dữ liệu
def clean_data(html, timestamp):
    soup = BeautifulSoup(html, "html.parser")
    rows = soup.select("table tr")
    cleaned = []

    for row in rows:
        cols = row.find_all("td")
        if len(cols) < 3:
            continue
        product = cols[0].get_text(strip=True)
        if "SJC 1L" in product or "SJC 1 lượng" in product:
            location = product.replace("Vàng SJC 1L", "").replace("Vàng SJC 1 lượng", "").strip()
            try:
                buy_price = int(cols[1].get_text(strip=True).replace(",", "").replace("₫", ""))
                sell_price = int(cols[2].get_text(strip=True).replace(",", "").replace("₫", ""))
                cleaned.append({
                    "timestamp": timestamp,
                    "buy_price": buy_price,
                    "sell_price": sell_price,
                    "location": location
                })
            except Exception as e:
                print(f"Lỗi dữ liệu: {e}")
    return cleaned

# ✅ 4. Tạo bảng nếu chưa có
def create_table():
    try:
        conn = psycopg2.connect(database=DB_NAME, user=USER, password=PASSWORD, host=HOST, port=PORT)
        cursor = conn.cursor()
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS gold_prices (
                id SERIAL PRIMARY KEY,
                timestamp TIMESTAMP,
                buy_price INT,
                sell_price INT,
                location VARCHAR(100)
            );
        ''')
        conn.commit()
        print("✅ Đã tạo bảng gold_prices (nếu chưa có)")
    except Exception as e:
        print(f"❌ Lỗi tạo bảng: {e}")
    finally:
        cursor.close()
        conn.close()

# ✅ 5. Chèn dữ liệu
def insert_data(cleaned_data):
    if not cleaned_data:
        print("⚠️ Không có dữ liệu để chèn.")
        return
    try:
        conn = psycopg2.connect(database=DB_NAME, user=USER, password=PASSWORD, host=HOST, port=PORT)
        cursor = conn.cursor()
        insert_query = '''
            INSERT INTO gold_prices (timestamp, buy_price, sell_price, location)
            VALUES (%s, %s, %s, %s);
        '''
        for entry in cleaned_data:
            cursor.execute(insert_query, (
                entry['timestamp'],
                entry['buy_price'],
                entry['sell_price'],
                entry['location']
            ))
        conn.commit()
        print("✅ Dữ liệu đã được chèn vào bảng!")
    except Exception as e:
        print(f"❌ Lỗi khi chèn dữ liệu: {e}")
    finally:
        cursor.close()
        conn.close()

# ✅ 6. Chạy tất cả
html, timestamp = crawl_sjc()
cleaned_data = clean_data(html, timestamp)
create_table()
insert_data(cleaned_data)